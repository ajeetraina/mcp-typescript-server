

services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: mcp-typescript-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config.json:/app/config.json:ro
    environment:
      - NODE_ENV=production
      - MCP_SERVER_NAME=typescript-mcp-server
      - MCP_RATE_LIMIT=120
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Health check')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service
  mcp-server-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: mcp-typescript-server-dev
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DEBUG=true
    networks:
      - mcp-network
    profiles:
      - dev

  # Test service
  mcp-server-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: mcp-typescript-server-test
    command: npm test
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=test
    networks:
      - mcp-network
    profiles:
      - test

networks:
  mcp-network:
    driver: bridge

volumes:
  mcp-data:
  mcp-logs:
